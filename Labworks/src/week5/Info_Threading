This is Multithreading lab Works
--------------------------------
(Class File Name - Question from lab book)

1) EvenOdd - Write a program which will create two threads one to display even and other to
			 display odd numbers from 1 to 100.
		  
2) SyncMethod - Write a program to give synchronized access to multiple thread each with
				different message to display method which formats the message in the following manner.
				“[-----Message----]”
				
3) InventorySystem - Write a program to implement inventory System in which two threads called
					 Producer will add one product in the Inventory and other thread Consumer will
					 consume product from inventory. Thread should communicate in such a way
					 that, there should be maximum one product and minimum zero products in the inventory.
					 
4) DigitalClock - Write a program which displays a digital clock.

5) ThreadAnlz - Write a program to demonstrate that the once a thread is started can never be
				started again. Try and analyze the result.

6) CharPassing - Write a class that keeps a running total of all characters passed to it (one at a time)
				 and throws an exception if it passes a non-alphabetic character.
				 
7) CountingDemo - Create a simple counting thread. It will count to 100, pausing one second
			  	 between each number. Also, in keeping with the counting theme, it will output
				 a string for every ten numbers.			

8) ThreadClassDemo - Create a class and extend the Thread class.Override the run() method of Thread. This is where the synchronized block of code will go. 
					 For our three thread objects to share the same object, we will need to create a constructor that accepts a StringBuffer object in the argument. 
					 The synchronized 100 times and then increment the letter in the StringBuffer. Finally, in the main() method, 
					 create a single StringBuffer object using the letter A, then create three instances of our class and starts all three of them.
					 
9) StringUpperCase - Write a program to access command line arguments and convert string arguments into upper cases.

10) Tax - Sales tax in the city is 5.25%. Write a program that accepts a price on the command line and prints out the appropriate tax and total purchase price.
		  (After proper conversion from string to double).
		  
11) TaxMultiple - Modify the above program to get number of prices, total them, find the sales tax and calculate the total amount.

12) FileExtenstionChange - Write a program which gets a filename as command line argument and change the extension of the file. (Use lastIndexOf, substring functions).

13) TextCaseConverstion - Write a program to get a character from user and display whether it is a letter (lowercase/uppercase) or digit or space.

14) BinaryConverstion - Write a program to convert into to binary, hexadecimal and octal.

15) Try to run and understand the code and use the instance of the operator
